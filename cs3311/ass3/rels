#!/usr/bin/python3
# COMP3311 20T3 Ass3 ... print info about different releases for Movie

import sys
import psycopg2
#from helpers import whatever, functions, you, need

# define any local helper functions here

# set up some globals

usage = "Usage: rels 'PartialMovieTitle'"
db = None

# process command-line args

argc = len(sys.argv)
if argc != 2:
  print(usage)
  exit()

# manipulate database
select_movie = """
select m.title, m.start_year, m.id
from Moives m
  join  Aliases a on (a.movie_id = m.id)
  where m.title ~* %s
"""
select_aliases = """
select local_title, region, language
from Aliases a
where a.movie_id = %s
"""
try:
  db = psycopg2.connect("dbname=imdb")
  # ... add your code here ...
  partial_name = [sys.argv[1]]
  cur = db.cursor()
  cur.execute(select_movie, partial_name)
  num_movie = len(list(cur))

  if num_movie > 1:
    print('Movies matching \'%s\'', partial_name[0])
    print('===============')
    for movie in cur.fetchall():
        print(moive[0], '('+movie[1]+')')
  elif num_movie == 1:
    for movie in cur.fetchone():
      print(moive[0], '('+movie[1]+')', 'was also released as')
      cur.execute(select_aliases, moive[2])
      for alia in cur.fetchall():
        comb = ''
        # handle the region and language
        if alia[1] != None:
          comb = 'region:'+alia[1]
          if alia[2] != None:
            comb = comb+', language:'+alia[2]
        if alia[1] == None and alia[2] != None:
          comb = 'language:'+alia[2]
        if comb != '':
          comb = '('+comb+')'
        # print the aliases
        print('\''+alia[1]+'\'', comb)
  else:
    print('No movie matching \'%s\'',partial_name[0])
except psycopg2.Error as err:
  print("DB error: ", err)
finally:
  if db:
    db.close()

