#!/usr/bin/python3
# COMP3311 20T3 Ass3 ... print info about different releases for Movie

import sys
import psycopg2
import helpers
#from helpers import whatever, functions, you, need

# define any local helper functions here

# set up some globals

usage = "Usage: rels 'PartialMovieTitle'"
db = None
pattern = None

# check input
argc = len(sys.argv)
if argc != 2:
  print(usage)
  exit()

_, pattern, _ = construct_input(sys.argv)

# manipulate database
select_movie = """
select m.title, m.start_year, m.id
from Movies m
where m.title ~* %s
order by m.start_year, m.title
"""
select_aliases = """
select local_title, region, language, extra_info
from Aliases a
where a.movie_id = %s
order by a.ordering 
"""
try:
  db = psycopg2.connect("dbname=imdb")
  # ... add your code here ...
  cur = db.cursor()
  cur.execute(select_movie, [pattern])
  num_movie = len(list(cur))
  cur.execute(select_movie, [pattern])

  if num_movie < 1:
    print_not_found(pattern, 'movie')
  elif num_movie > 1:
    print_moive(pattern, cur.fetchall())
  elif num_movie == 1:
    for movie in cur.fetchall():
      print(movie[0], '('+str(movie[1])+')', 'was also released as')
      cur.execute(select_aliases, [movie[2]])
      for alia in cur.fetchall():
        comb = ''
        # handle the region and language
        if alia[1] != None:
          comb = 'region: '+alia[1]
          if alia[2] != None:
            comb = comb.strip(' ')+', language: '+alia[2]
        if alia[1] == None and alia[2] != None:
          comb = 'language: '+alia[2]
        if comb != '':
          comb = '('+comb.strip(' ')+')'
        elif comb == '' and alia[4] != None:
          comb = '('+alia[4]+')'
        # print the aliases
        print('\''+alia[0]+'\'', comb)
except psycopg2.Error as err:
  print("DB error: ", err)
finally:
  if db:
    db.close()

